#ifndef npsSdk_H
#define npsSdk_H
#include <stdio.h>
#include <stddef.h> /* offsetof */
#include "NpsMethods.h"

#ifdef __cplusplus
extern "C" {
#endif


enum envs {
  PROD_ENV=1,
  SANBOX_ENV,
  STAGE_ENV,
};


enum methods {
  PAY_ONLINE_2P_TYPE=1,
  AUTHORIZE_2P_TYPE,
  REFUND_TYPE,
  CAPTURE_TYPE,  
  BANK_PAYMENT_2P_TYPE,  
  SPLIT_PAY_ONLINE_2P_TYPE,  
  SPLIT_AUTHORIZE_2P_TYPE,  
  PAY_ONLINE_3P_TYPE,
  SPLIT_PAY_ONLINE_3P_TYPE,  
  AUTHORIZE_3P_TYPE,  
  SPLIT_AUTHORIZE_3P_TYPE,  
  BANK_PAYMENT_3P_TYPE,  
  CASH_PAYMENT_3P_TYPE,  
  CREATE_PAYMENT_METHOD_TYPE,  
  CREATE_PAYMENT_METHOD_TOKEN_TYPE,  
  RETRIEVE_PAYMENT_METHOD_TOKEN_TYPE,  
  CREATE_PAYMENT_METHOD_FROM_PAYMENT_TYPE,  
  RETRIEVE_PAYMENT_METHOD_TYPE,  
  UPDATE_PAYMENT_METHOD_TYPE,  
  DELETE_PAYMENT_METHOD_TYPE,
  RECACHE_PAYMENT_METHOD_TOKEN_TYPE,  
  CREATE_CUSTOMER_TYPE,  
  RETRIEVE_CUSTOMER_TYPE,
  UPDATE_CUSTOMER_TYPE,
  DELETE_CUSTOMER_TYPE,
  SIMPLE_QUERY_TX_TYPE,  
  QUERY_CARD_NUMBER_TYPE,  
  QUERY_CARD_DETAILS_TYPE,  
  QUERY_TXS_TYPE,
  GET_IIN_DETAILS_TYPE,  
  CHANGE_SECRET_KEY_TYPE,
  FRAUD_SCREENING_TYPE,
  CREATE_CLIENT_SESSION_TYPE,  
  GET_INSTALLMENTS_OPTIONS_TYPE,  
  NOTIFY_FRAUD_SCREENING_REVIEW_TYPE,
  TOTAL_METHODS
};


struct nps_generics {
  int *structFieldsIdx;  
  char **structFieldsDesc;
  size_t *structFieldsOffset;            
  int max_fields;
  int structSize;
  struct nps_generics *structFieldsType;
};

/**************** START STRUCTURES DEFINES ***************************/


/**************** END STRUCTURES DEFINES *****************************/

//El orden de las estructuras debe corresponder con los enum methods 
static struct nps_generics methodsFields[]=
{
  {&ReqFieldsIdx_RequerimientoStruct, &ReqFieldsDesc_RequerimientoStruct, &inicioReqStruct_RequerimientoStruct, 51,sizeof(REQ_STRUCT), &ReqFieldsType_RequerimientoStruct},
};

static struct nps_generics methodsRespFields[]=
{
  {&RespFieldsIdx_RespuestaStruct, &RespFieldsDesc_RespuestaStruct, &inicioRespStruct_RespuestaStruct, 51, sizeof(RESP_STRUCT),&RespFieldsType_RespuestaStruct},
};

int setLog(enum log_level logLevel, char * LogFileName , FILE * logFd);
int setEnvironment(int iEnv);
int getEnvironment();
int sendRequest(int type, char *apiKey,  char *pRequest, char *pResponse);
#ifdef __cplusplus
}
#endif

#endif
